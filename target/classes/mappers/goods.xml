<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goods">
    <select id="selectAll" resultType="com.edu.mybatis.entity.Goods">
        select * from t_goods order by goods_id desc limit 10
    </select>

<!-- 单参数传递，使用parameterType指定数据类型,SQL中使用#{value}提取参数 -->
    <select id="selectById" resultType="com.edu.mybatis.entity.Goods" parameterType="Integer">
        select * from t_goods where  goods_id = #{value};
    </select>

<!-- 多参数传递时，使用parameterType指定Map接口，SQL中#{key}提取参数 -->
    <select id="selectByPriceRange" parameterType="java.util.Map" resultType="com.edu.mybatis.entity.Goods">
        select * from t_goods
        where current_price between #{min} and #{max}
        order by current_price
        limit 0,#{limit}
    </select>
    
<!-- LinkedHashMap保存多表关联结果
     MyBatis会将每一条记录包装为LinkedHashMap对象
     优点：易于扩展，易于使用
     key 字段名 value值 字段类型根据表结果进行自动判断
     缺点：太过灵活，无法进行编译时检测
   -->
    <select id="selecrGoodsMap" resultType="java.util.LinkedHashMap">
        select g.*, c.category_name from t_goods g, t_category c
        where g.category_id = c.category_id
    </select>

<!-- 结果映射 -->
    <resultMap id="rmGoods" type="com.edu.mybatis.Dto.GoodsDTO">
<!--     设置主键字段与属性映射  -->
        <id property="goods.goodsId" column="goods_id"></id>
<!--     设置非主键字段与属性映射  -->
        <result property="goods.title" column="title"></result>
        <result property="goods.originalCost" column="original_cost"></result>
        <result property="goods.currentPrice" column="current_price"></result>
        <result property="goods.discount" column="discount"></result>
        <result property="goods.isFreeDelivery" column="is_free_delivery"></result>
        <result property="goods.categoryId" column="category_id"></result>
        <result property="test" column="test"></result>
        <result property="category.categoryId" column="category_id"></result>
        <result property="category.categoryName" column="category_name"></result>
        <result property="category.parentId" column="category_parent_id"></result>
        <result property="category.categoryLevel" column="category_category_level"></result>
        <result property="category.categoryOrder" column="category_category_order"></result>
    </resultMap>

    <select id="selectGoodsDTO" resultMap="rmGoods">
        select g.*, c.*,'1' as test from t_goods g, t_category c
        where g.category_id = c.category_id
    </select>

    <insert id="insert"
            parameterType="com.edu.mybatis.entity.Goods"
            useGeneratedKeys="true"
            keyProperty="goodsId"
            keyColumn="goods_id">
        insert into t_goods(title, sub_title, original_cost, current_price, discount, is_free_delivery,category_id)
        values (#{title},#{subTitle},#{originalCost},#{currentPrice},#{discount},#{isFreeDelivery},#{categoryId});
--       主键回填
<!--        <selectKey resultType="Integer" keyProperty="goodsId" order="AFTER">-->
<!--            select last_insert_id()-->
<!--        </selectKey> -->
    </insert>

    <update id="update" parameterType="com.edu.mybatis.entity.Goods">
        update t_goods
        set title = #{title},
        sub_title = #{subTitle},
        original_cost = #{originalCost},
        current_price = #{currentPrice},
        discount = #{discount},
        is_free_delivery = #{isFreeDelivery},
        category_id = #{categoryId}
        where goods_id = #{goodsId}
    </update>

    <delete id="delete" parameterType="Integer">
        delete from t_goods where goods_id = #{value}
    </delete>

</mapper>
